<style>
  .modal-container {
    position: fixed;
    display: table;
    height: 100%;
    width: 100%;
    top: 0;
    left: 0;
    transform: scale(0);
    z-index: 5;
  }

  .modal-container.modal-animation {
    transform: scale(1);
  }
  .modal-container.modal-animation .modal-background {
    background: rgba(0, 0, 0, 0);
    animation: fadeIn 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
  }
  .modal-container.modal-animation .modal-background .modal-content {
    opacity: 0;
    animation: scaleUp 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
  }
  .modal-container.modal-animation.out {
    animation: quickScaleDown 0s 0.5s linear forwards;
  }
  .modal-container.modal-animation.out .modal-background {
    animation: fadeOut 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
  }
  .modal-container.modal-animation.out .modal-background .modal-content {
    animation: scaleDown 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
  }

  .modal-container .modal-background {
    display: table-cell;
    background: rgba(0, 0, 0, 0.8);
    text-align: center;
    vertical-align: middle;
  }
  .modal-container .modal-background .modal-content {
    background: white;
    padding: 50px;
    display: inline-block;
    border-radius: 3px;
    font-weight: 300;
    position: relative;
  }

  @keyframes fadeIn {
    0% {
      background: rgba(0, 0, 0, 0);
    }
    100% {
      background: rgba(0, 0, 0, 0.7);
    }
  }
  @keyframes fadeOut {
    0% {
      background: rgba(0, 0, 0, 0.7);
    }
    100% {
      background: rgba(0, 0, 0, 0);
    }
  }
  @keyframes scaleUp {
    0% {
      transform: scale(0.8) translateY(1000px);
      opacity: 0;
    }
    100% {
      transform: scale(1) translateY(0px);
      opacity: 1;
    }
  }
  @keyframes scaleDown {
    0% {
      transform: scale(1) translateY(0px);
      opacity: 1;
    }
    100% {
      transform: scale(0.8) translateY(1000px);
      opacity: 0;
    }
  }
  @keyframes scaleBack {
    0% {
      transform: scale(1);
    }
    100% {
      transform: scale(0.85);
    }
  }
  @keyframes scaleForward {
    0% {
      transform: scale(0.85);
    }
    100% {
      transform: scale(1);
    }
  }
  @keyframes quickScaleDown {
    0% {
      transform: scale(1);
    }
    99.9% {
      transform: scale(1);
    }
    100% {
      transform: scale(0);
    }
  }
</style>
{%- unless section.settings.show_home_only and template != 'index' -%}
<div class="modal-container" data-delay="{{ section.settings.apparition_delay }}" data-show_once="{{ section.settings.show_once }}">
  <div class="modal-background modal--newsletter">
    <div class="modal-content">
      <div class="popup-newsletter">
          {%- if section.settings.title != blank -%}
            <h3 class="popup-newsletter__title">{{ section.settings.title | escape }}</h3>
          {%- endif -%}

        <button class="popup-newsletter__close link" data-action="close-popup">
            {%- render 'icon-close' -%}
          </button>

        {%- if section.settings.content != blank -%}
            <div class="popup-newsletter__content rte">
              {{ section.settings.content }}
            </div>
        {%- endif -%}

        {%- if section.settings.show_newsletter -%}
        {%- form 'customer', id: 'newsletter-popup', class: 'form popup-newsletter__form' -%}
          {%- if form.posted_successfully? -%}
            <p class="alert alert--success alert--center">{{- 'newsletter.success' | t }}</p>
          {%- else -%}

            <input type="hidden" name="contact[tags]" value="newsletter">

            <div class="field">
              <input
                id="NewsletterForm--{{ section.id }}"
                type="email"
                name="contact[email]"
                class="field__input"
                value="{{ form.email }}"
                aria-required="true"
                autocorrect="off"
                autocapitalize="off"
                autocomplete="email"
                {% if form.errors %}
                  autofocus
                  aria-invalid="true"
                  aria-describedby="Newsletter-error--{{ section.id }}"
                {% elsif form.posted_successfully? %}
                  aria-describedby="Newsletter-success--{{ section.id }}"
                {% endif %}
                placeholder="{{ 'newsletter.label' | t }}"
                required
              >
              <label class="field__label" for="NewsletterForm--{{ section.id }}">
                {{ 'newsletter.label' | t }}
              </label>
              <button
                type="submit"
                class="newsletter-form__button field__button"
                name="commit"
                id="Subscribe"
                aria-label="{{ 'newsletter.button_label' | t }}"
              >
                {% render 'icon-arrow' %}
              </button>
            </div>

          {%- endif -%}
        {%- endform -%}
      {%- endif -%}
        
      </div>
    </div>
  </div>
</div>
{% endunless %}

<script>

  const pageType = "{{ request.page_type }}";
  const modal = document.querySelector(".modal-container");

  //close modal:
    modal.addEventListener("click", (event) => {
      const modalContent = event.target.querySelector(".modal-content");
      const exitButton = event.target.closest("[data-action='close-popup']");
        console.log(modalContent);

      if (exitButton || modalContent) {
        //we clicked outside the modal, so we should close the modal
        modal.classList.add("out");
      }
    });

//open modal:
window.addEventListener("load", (event) => {
  if (modal) {
    console.log(modal.dataset.delay);
    console.log(modal.dataset.show_once);
    const popupDelay = parseInt(modal.dataset.delay);
    const showOnce = modal.dataset.show_once === "true";
    if (window.location.hash === "#newsletter-popup" && pageType !== "captcha") {
        openPopup(modal);
    } else if ( showOnce && localStorage.getItem("popupShown") === null ||
         !showOnce ) {
          setTimeout(
            openPopup(modal),
            popupDelay * 1000
          );
    }
  }
});

function openPopup(element) {
  modal.classList.remove("modal-animation","out");
  modal.classList.add("modal-animation");
  localStorage.setItem("popupShown", "true");
}
</script>

{% schema %}
{
  "name": "Popup-simple",
  "class": "section",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_home_only",
      "label": "Show only on home page",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_once",
      "label": "Show once to visitors",
      "default": true
    },
    {
      "type": "range",
      "id": "apparition_delay",
      "min": 0,
      "max": 15,
      "step": 1,
      "unit": "sec",
      "label": "Delay until the popup appears",
      "default": 5
    },
    {
      "type": "header",
      "content": "Popup Text"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Heading",
      "default": "Popup"
    },
    {
      "type": "richtext",
      "id": "content",
      "label": "Text",
      "default": "<p>You can use this popup to display some useful information to your customers.</p>"
    },
    {
      "type": "checkbox",
      "id": "show_newsletter",
      "label": "Show newsletter form",
      "info": "Customers who subscribe will have their email address added to the \"accepts marketing\" [customer list](/admin/customers?query=&accepts_marketing=1).",
      "default": true
    }
  ],
  "presets": [
    {
      "name": "Popup-simple"
    }
  ]
}
{% endschema %}
